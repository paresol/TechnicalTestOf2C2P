// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalTestOf2C2P.Contexts;

#nullable disable

namespace TechnicalTestOf2C2P.Migrations
{
    [DbContext(typeof(DbContextApplication))]
    [Migration("20240514175018_InitialCreateTable")]
    partial class InitialCreateTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechnicalTestOf2C2P.Models.Entities.CurrencyMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("CurrencyMaster");
                });

            modelBuilder.Entity("TechnicalTestOf2C2P.Models.Entities.StatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Output")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("StatusMaster");
                });

            modelBuilder.Entity("TechnicalTestOf2C2P.Models.Entities.Transactions", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
